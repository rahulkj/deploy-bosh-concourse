#!/bin/bash -e

if [ -z "$__BASEDIR__" ]; then
  __DIR__=$(dirname "$(realpath $0)")
  __BASE_DIR__=$(dirname $__DIR__)

  source $__DIR__/load-env.sh
fi

function createBoshDeploymentVarsFile() {
  cp $__BASEDIR__/misc/bosh-vars-template.yml $__BASEDIR__/$BOSH_VAR_FILE

  yq w -i $__BASEDIR__/$BOSH_VAR_FILE director_name "$BOSH_ALIAS"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE internal_cidr "$NETWORK_CIDR"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE internal_gw "$NETWORK_GATEWAY"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE internal_ip "$BOSH_IP"
  for i in $(echo "$DNS_SERVERS" | sed "s/,/ /g")
  do
    yq w -i $__BASEDIR__/$BOSH_VAR_FILE internal_dns[+] "$i"
  done
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE network_name "$VCENTER_NETWORK_NAME"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vcenter_dc "$VSPHERE_DATACENTER"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vcenter_ds "$VCENTER_STORAGE_NAME"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vcenter_ip "$VCENTER_IP"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vcenter_user "$VCENTER_USERNAME"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vcenter_password "$VCENTER_PASSWORD"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vcenter_templates "$VCENTER_VM_TEMPLATES_FOLDER_NAME"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vcenter_vms "$VCENTER_VMS_FOLDER_NAME"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vcenter_disks "$VCENTER_DISK_FOLDER_NAME"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vcenter_cluster "$VCENTER_CLUSTER_NAME"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vcenter_rp "$VCENTER_RESOURCE_POOL"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE bosh_release_url "$BOSH_RELEASE_URL"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE bosh_release_sha "$BOSH_RELEASE_SHA"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vsphere_cpi_release_url "$VSPHERE_CPI_URL"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE vsphere_cpi_release_sha "$VSPHERE_CPI_SHA"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE stemcell_url "$STEMCELL_URL"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE stemcell_sha "$STEMCELL_SHA"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE os_conf_release_url "$OS_CONF_RELEASE_URL"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE os_conf_release_sha "$OS_CONF_RELEASE_SHA"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE uaa_release_url "$UAA_RELEASE_URL"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE uaa_release_sha "$UAA_RELEASE_SHA"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE credhub_release_url "$BOSH_CREDHUB_RELEASE_URL"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE credhub_release_sha "$BOSH_CREDHUB_RELEASE_SHA"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE syslog_address "$SYSLOG_ADDRESS"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE syslog_port "$SYSLOG_PORT"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE syslog_transport "$SYSLOG_TRANSPORT"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE tsdb_address "$TSDB_ADDRESS"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE tsdb_port "$TSDB_PORT"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE nsxt_host "$NSX_HOST"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE nsxt_user "$NSX_USERNAME"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE nsxt_password "$NSX_PASSWORD"
  yq w -i $__BASEDIR__/$BOSH_VAR_FILE nsxt_ca_cert -- "$(< /tmp/nsx.pem)"
}

function createConcourseDeploymentVarsFile() {
  cp $__BASEDIR__/misc/concourse-vars-template.yml $__BASEDIR__/$CONCOURSE_VAR_FILE

  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE linux_release "$LINUX_RELEASE"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE local_user.username "$CONCOURSE_ADMIN_USERNAME"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE local_user.password "$CONCOURSE_ADMIN_PASSWORD"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE deployment_name "concourse"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE az_name "$CONCOURSE_AZ_NAME"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE network_name "$CONCOURSE_NW_NAME"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE web_network_name "$CONCOURSE_NW_NAME"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE web_static_ips "$CONCOURSE_WEB_STATIC_IPS"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE concourse_db_ip "$CONCOURSE_DB_STATIC_IPS"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE worker_static_ips "$CONCOURSE_WORKER_STATIC_IPS"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE external_host "$CONCOURSE_FQDN"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE external_url "$CONCOURSE_EXTERNAL_URL"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE web_instances "$ATC_WEB_INSTANCES"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE web_vm_type "$ATC_WEB_VM_TYPE"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE db_instances "$CONCOURSE_DB_INSTANCES"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE db_vm_type "$CONCOURSE_DB_VM_TYPE"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE db_persistent_disk_type "$CONCOURSE_DB_PERSISTENT_DISK_TYPE"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE worker_instances "$CONCOURSE_WORKER_INSTANCES"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE worker_vm_type "$CONCOURSE_WORKER_VM_TYPE"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE github_client.username "$GIT_CLIENT_USERNAME"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE github_client.password "$GIT_CLIENT_TOKEN"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE main_team.github_users "$GIT_USERS"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE main_team.github_orgs "$GIT_ORGS"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE main_team.github_teams "$GIT_TEAMS"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE bbr_sdk_version "$BBR_RELEASE_VERSION"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE bbr_sdk_sha1 "$BBR_RELEASE_SHA"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE uaa_version "$UAA_RELEASE_VERSION"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE uaa_sha1 "$UAA_RELEASE_SHA"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE credhub_version "$CREDHUB_RELEASE_VERSION"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE credhub_sha1 "$CREDHUB_RELEASE_SHA"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE volume_sweeper_max_in_flight "$VOLUME_SWEEPER_MAX_IN_FLIGHT"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE worker_rebalance_interval "$WORKER_REBALANCE_INTERVAL"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE worker_update_max_in_flight "$WORKER_UPDATE_MAX_IN_FLIGHT"
  yq w -i $__BASEDIR__/$CONCOURSE_VAR_FILE credhub_path_prefix "$CONCOURSE_PATH_PREFIX"
}

function createCloudConfigVarsFile() {
  cp $__BASEDIR__/misc/cloud-config-vars-template.yml $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE
  for i in $(echo "$DNS_SERVERS" | sed "s/,/ /g")
  do
    yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "dns_servers[+]" "$i"
  done

  for i in $(echo "$RESERVED_IPS" | sed "s/,/ /g")
  do
    yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "reserved_ips[+]" "$i"
  done

  for i in $(echo $CLOUD_CONFIG_STATIC_IPS | sed "s/,/ /g")
  do
    yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "static_ips[+]" "$i"
  done

  yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "az_name" "$CONCOURSE_AZ_NAME"
  yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "nw_name" "$CONCOURSE_NW_NAME"
  yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "vcenter_cluster" "$VCENTER_CLUSTER_NAME"
  yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "network_cidr" "$NETWORK_CIDR"
  yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "network_name" "$VCENTER_NETWORK_NAME"
  yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "network_gateway" "$NETWORK_GATEWAY"
  yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "vcenter_rp" "$VCENTER_RESOURCE_POOL"
  yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "vm_disk_type" "$VM_DISK_TYPE"
  yq w -i $__BASEDIR__/$CLOUD_CONFIG_VAR_FILE "compilation_vm_type" "$COMPILATION_VM_TYPE"
}
